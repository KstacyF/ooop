1. Які конкретні задачі планували вирішувати за допомогою цієї бібліотеки?
За допомогою Unity ми хотіли створити двовимірну гру-платформер та реалізувати різні можливості ігрових об’єктів.

2. Чому було обрано саме цю бібліотеку, а не аналоги?
Unity – один з найпопулярніших, але простих у використанні ігрових двигунів. Він дозволяє розробляти ігри навіть при відсутності досвіду, навичок чи знань. Unity має зручний інтерфейс Drag & Drop, а також велику бібліотеку ассетів та плагінів, які значно пришвидчують процес розробки.

3. Наскільки просто та зрозуміло було отримати, встановити, налаштувати та почати використовувати цю бібліотеку?
Unity доволі зручний у цьому плані, тож зі встановленням та налаштуваннях не виникло жодних проблем. Проте якщо складності і виникли б, на офіційному сайті Unity (https://unity.com) є чіткі та зрозумілі вказівки, а також існує багато туторіалів та гайдів у відкритому доступі в Інтернеті.

4. Наскільки зрозумілою та корисною була документація бібліотеки?
Unity має лаконічну та зрозумілу документацію. З основного сайту https://docs.unity.com можна одразу перейти у певний розділ, цікавий користувачу, наприклад, у 2D чи 3D розробку, графіку, фізику, використання скриптів тощо. Також є окремий розділ для новачків з описом інтерфейсу та вказівками щодо початку роботи, використання ассетів чи створення сцен. Я користувалася інформацією, поданою на сайті https://docs.unity3d.com, зручною також є наявність зображень, хоча іноді на початку не вистачає прикладів.

5. Наскільки було зрозуміло, як саме використовувати бібліотеку, які класи/методи/функції використовувати для вирішення поставлених задач?
У Unity доволі зручний інтерфейс користувача, а також інтуїтивно зрозумілі назви класів, методів та функції. Під час вирішення проблем можна звертатися до документації або форумів, на яких переважно є відповіді на всі запитання. Зручним та корисним є форум https://stackoverflow.com, де розробники діляться власним досвідом і відповідають на питання.
Щодо класів, для створення можуть використовуватися такі основні з них як GameObject (для ігрового об’єкта, що використовується у сцені) чи Vectors (для роботи з точками у двовимірному просторі), а також методи з них.

6. Наскільки зручно було використовувати бібліотеку, чи не треба було писати багато надлишкового коду?
Бібліотека в Unity зручна, в ній не так складно розібратися. Код не виглядає завеликим, переважно лаконічним.

7. Наскільки зрозумілою була поведінка класів/методів/функцій з бібліотеки?
На початку треба було дещо розібратися та почитати документацію, проте потім поведінка класів стає зрозумілою. Завдяки практиці можна розібратися ще краще.

8. Наскільки зрозумілою була взаємодія між різними класами/методами/функціями цієї бібліотеки, а також взаємодія між бібліотекою та власним кодом?
Як вже було зазначено, перед початком роботи без документації обійтися складно. Із появою досвіду стає значно легше, тому чим більше використовувалися бібліотеки, тим більш зрозумілою ставала взаємодія. Тим не менш, Unity для мене новий двигун, тому у процесі ще виникають питання, на які мені треба шукати відповіді.

9. Чи виникали якісь проблеми з використанням бібліотеки? Чи вдалось їх вирішити, як саме?
Іноді виникають не проблеми, а більше як складності. Переважно це стається через нестачу досвіду, але на кожне питання можна знайти відповідь у документації або на форумі. Я зазвичай користуюся форумом Stack Overflow (https://stackoverflow.com), де можна розібрати проблеми, пов’язані не тільки з Unity, але й іншими двигунами, різноманітними фреймворками та мовами програмування. Проте існують також спеціалізовані форуми по Unity, наприклад, https://forum.unity.com чи https://answers.unity.com, на якому розробники залюбки розповідають про свій досвід вирішення аналогічних проблем чи складностей.

10. Що хорошого можна сказати про цю бібліотеку, які були позитивні аспекти використання бібліотеки?

11. Що поганого можна сказати про цю бібліотеку, які були негативні аспекти використання бібліотеки?

12. Якби довелось вирішувати аналогічну задачу, але вже враховуючи досвід використання в цій лабораторній роботі, що варто було б робити так само, а що змінити? Можливо, використати інші бібліотеки, чи використати інші можливості цієї бібліотеки, чи інакше організувати код, чи ще щось?
